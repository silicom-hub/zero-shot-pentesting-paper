import json
import os
import numpy as np


class Benchmark():
    def __init__(self, file):
        self.file = file

        if os.path.isfile(file):
            with open(file, "r") as f:
                self.data = json.load(f)
        else:
            self.data = dict()


    def reset_experiments(self, scenario, model):
        if scenario not in self.data.keys():
            self.data[scenario] = dict()

        if model not in self.data[scenario].keys():
            self.data[scenario][model] = dict()

        self.data[scenario][model]["exp"] = []
        self.data[scenario][model]["mean_score"] = 0.0
        self.data[scenario][model]["variance"] = 0.0


    def add_new_experiment(self, scenario, model, score):
        if scenario not in self.data.keys():
            self.data[scenario] = dict()

        if model not in self.data[scenario].keys():
            self.data[scenario][model] = dict()

        if "exp" not in self.data[scenario][model].keys():
            self.data[scenario][model]["exp"] = []
            self.data[scenario][model]["mean_score"] = 0.0
            self.data[scenario][model]["variance"] = 0.0

        self.data[scenario][model]["exp"].append(score)


    def update_scores(self):
        for scenario in self.data.keys():
            for model in self.data[scenario].keys():
                exp = self.data[scenario][model]["exp"]

                mean_score = np.mean(exp)
                #variance_score = np.var(exp)
                variance_score = np.std(exp)
                
                self.data[scenario][model]["mean_score"] = mean_score
                self.data[scenario][model]["variance"] = variance_score

    def save(self):
        with open(self.file, "w") as file:
            json.dump(self.data, file)

    def render(self):
        print(self.data)


if __name__ == "__main__":

    bench = Benchmark("output/test.json")

    bench.reset_experiments("Medium", "zero-shot")

    bench.add_new_experiment("Medium", "zero-shot", 83)
    bench.add_new_experiment("Medium", "zero-shot", 83)
    bench.add_new_experiment("Medium", "zero-shot", 82)
    bench.add_new_experiment("Medium", "zero-shot", 82)
    bench.add_new_experiment("Medium", "zero-shot", 83)

    bench.update_scores()

    bench.render()

    bench.save()
